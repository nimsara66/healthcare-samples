name: Weekly Build

on:
  schedule:
    - cron:  '30 18 * * 0'    # 00:00 on Sundays in LK time (GMT+5:30)
  workflow_dispatch:
  
env:
  R4_RESOURCE_APIS_PATTERN: r4/resource-apis/*/*
  R4_PATTERN: r4/*/*

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      project-matrix: ${{ steps.unique-project-paths.outputs.BALLERINA_PROJECT_PATHS }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get subdirectory paths
        id: subdirectories
        run: |
          subdirs=$(ls -d */)
          subdirs="[\"${subdirs// /\", \"}\"]"
          echo "subdirs: $subdirs"

  # build:
  #   needs: [ setup ]
  #   runs-on: ubuntu-latest
  #   env:
  #     JAVA_OPTS: -Xmx4G
  #   if: ${{ needs.setup.outputs.project-matrix != '[]' && needs.setup.outputs.project-matrix != '' }}
  #   strategy:
  #     matrix:
  #       path: ${{ fromJson(needs.setup.outputs.project-matrix) }}

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Ballerina Build
  #       uses: ballerina-platform/ballerina-action@2201.6.0
  #       with:
  #         args: pack
  #       env:
  #         WORKING_DIR: ./${{ matrix.path }}
  #         JAVA_HOME: /usr/lib/jvm/default-jvm

  # test:
  #   needs: [ setup ]
  #   runs-on: ubuntu-latest
  #   env:
  #     JAVA_OPTS: -Xmx4G
  #   if: ${{ needs.setup.outputs.project-matrix != '[]' }}
  #   strategy:
  #     matrix:
  #       path: ${{ fromJson(needs.setup.outputs.project-matrix) }}

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Ballerina Test
  #       uses: ballerina-platform/ballerina-action@2201.6.0
  #       with:
  #         args: test --code-coverage
  #       env:
  #         WORKING_DIR: ./${{ matrix.path }}
  #         JAVA_HOME: /usr/lib/jvm/default-jvm

  #     - name: Read Ballerina Test Results
  #       id: test_results
  #       run: |
  #         if [ -f "./${{ matrix.path }}/target/report/test_results.json" ]; then
  #           content=`cat ./${{ matrix.path }}/target/report/test_results.json`                
  #           content="${content//'%'/'%25'}"
  #           content="${content//$'\n'/'%0A'}"
  #           content="${content//$'\r'/'%0D'}"

  #           echo "Covered Code Lines : $(echo "$content" | jq -r '.coveredLines')"
  #           echo "Total Code Lines : $(echo "$content" | jq -r '.missedLines') + $(echo "$content" | jq -r '.coveredLines')"
  #           echo "Code Coverage Percentage : $(echo "$content" | jq -r '.coveragePercentage')"
  #         else
  #           # echo "TEST_RESULTS_JSON=" >> $GITHUB_OUTPUT
  #           echo "No test results file found."
  #         fi
